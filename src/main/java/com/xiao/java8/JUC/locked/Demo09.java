package com.xiao.java8.JUC.locked;

/**
 * @ClassName Demo09
 * @Description  饥饿与活锁
 * @Author lktbz
 * @Date 2021/1/10
 */
public class Demo09 {
    /**
     * 官方解释：
         * 饥饿
     *  饥饿描述了一种情况，即线程无法获得对共享资源的常规访问并且无法取得进展。
     *  当“贪婪”线程使共享资源长时间不可用时，就会发生这种情况。
     *  例如，假设一个对象提供了一个同步方法，该方法通常需要很长时间才能返回。
     *  如果一个线程频繁调用此方法，则也需要频繁同步访问同一对象的其他线程将经常被阻塞。
     *
     * 活锁
     * 一个线程通常会响应另一个线程的操作而行动。
     * 如果另一个线程的动作也是对另一个线程的动作的响应，则可能会导致活锁。
     * 与死锁一样，活锁的线程无法取得进一步的进展。
     * 但是，线程没有被阻塞-它们只是太忙于彼此响应而无法恢复工作。
     * 这相当于两个人试图在走廊中互相经过：阿方斯（Alphonse）向左移动以让加斯顿（Gaston）
     * 通过，而格斯顿（Gaston）向右移动以让Alphonse通过。
     * 看到他们仍然互相阻挡，Alphone向右移动，Gaston向左移动。
     * 他们仍然互相阻碍，两个都没有执行
     *
     *
     */
}
